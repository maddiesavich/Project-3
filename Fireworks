import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Scanner;

import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.WindowConstants;

public class Fireworks implements MouseListener, KeyListener {

	// Initialize
	protected static double speed;
	protected static double angle;
	protected static double time = 1000;
	Color NAVY = new Color(22, 145, 217);

	// Create instance for methods
	static ProjectileMethods projectile = new ProjectileMethods(speed, angle, time);

	// Paint Component
	public void paintComponent(Graphics g) {
		g.setColor(Color.GREEN);
		g.fillRect(0, 990, 100, 10);
		g.setColor(NAVY);
		g.fillRect(0, 989, 100, 989);
	}

	// Methods for MouseListener and KeyListener
	@Override
	public void keyPressed(KeyEvent e) {

	}

	@Override
	public void keyReleased(KeyEvent e) {

	}

	@Override
	public void keyTyped(KeyEvent e) {

	}

	@Override
	public void mouseClicked(MouseEvent e) {

	}

	@Override
	public void mouseEntered(MouseEvent e) {

	}

	@Override
	public void mouseExited(MouseEvent e) {

	}

	@Override
	public void mousePressed(MouseEvent e) {

	}

	@Override
	public void mouseReleased(MouseEvent e) {

	}

	public static void main(String[] args) {
		
		// Call method to create the screen
		FireworksCanvas.screen();

		// Import the Scanner
		Scanner in = new Scanner(System.in);

		// Prompt the user to enter a value for launch angle
		System.out.println("Please enter a number for the launch angle of the projectile [0-90]: ");
		double angle = in.nextDouble();

		// Prompt the user to enter a value for speed of the projectile
		System.out.println("Please enter a number for the speed of the projectile: ");
		double speed = in.nextDouble();

		// Call methods to print the coordinates of the center of the projectile
		System.out.println("The coordinates of where the projectile will explode are: ("
				+ projectile.trajectoryX(speed, angle, time) + ", " + projectile.trajectoryY(speed, angle, time) + ")");

	}

}
