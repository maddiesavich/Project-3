import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Scanner;

import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.WindowConstants;

public class Fireworks extends JComponent implements KeyListener {

	// Initialize
	private Graphics g;
	protected static double speed;
	protected static double angle;
	protected static double time = 1000;
	protected int x, y;
	protected int height = getHeight();
	protected int width = getWidth();

	// Create instance for methods
	static ProjectileMethods projectile = new ProjectileMethods(speed, angle, time);

	// Constructor
	public Fireworks(double speed, double time, double angle) {
		super();
		this.speed = speed;
		this.angle = angle;
		this.time = time;

	}

	// Methods for MouseListener and KeyListener
	@Override
	public void keyPressed(KeyEvent e) {

	}

	@Override
	public void keyReleased(KeyEvent e) {

	}

	@Override
	public void keyTyped(KeyEvent e) {

	}

	public static void main(String[] args) {

		// Call method to create the screen
		FireworksCanvas.screen();

	}

	public void paintComponent(Graphics g) {
		drawPath(g);
		drawFirework(g);
	}
	// Method to draw a firework
	private void drawFirework(Graphics g2) {
		int xTwo = (int)((speed) * (Math.cos(Math.toRadians(angle)))* time);
		int yTwo = (int)((9.8 * ((speed * (Math.sin(Math.toRadians(angle))))*time - 0.5 * (9.8) * time * time)));
		// Draw circles that have an increasing radius
		for( int i = 120; i >= 10; i = i - 10) {
		g.drawOval(x - i,(( height - y) - i), 2 * i, 2 * i);
		}
	}

	// Method to draw the path for the firework
	private void drawPath(Graphics g) {
		g.setColor(Color.RED);
		for (int i = 0; i < time; i += 0.1) {
			int xOne = (int)((speed) * (Math.cos(Math.toRadians(angle)))*i);
			int yOne = (int)((speed * (Math.sin(Math.toRadians(angle)))*i));
			g.fillOval(xOne, yOne, 7, 7);
		
		}
	
		
	}
}


	}

	@Override
	public void keyReleased(KeyEvent e) {

	}

	@Override
	public void keyTyped(KeyEvent e) {

	}

	@Override
	public void mouseClicked(MouseEvent e) {

	}

	@Override
	public void mouseEntered(MouseEvent e) {

	}

	@Override
	public void mouseExited(MouseEvent e) {

	}

	@Override
	public void mousePressed(MouseEvent e) {

	}

	@Override
	public void mouseReleased(MouseEvent e) {

	}

	public static void main(String[] args) {
		
		// Call method to create the screen
		FireworksCanvas.screen();

		// Import the Scanner
		Scanner in = new Scanner(System.in);

		// Prompt the user to enter a value for launch angle
		System.out.println("Please enter a number for the launch angle of the projectile [0-90]: ");
		double angle = in.nextDouble();

		// Prompt the user to enter a value for speed of the projectile
		System.out.println("Please enter a number for the speed of the projectile: ");
		double speed = in.nextDouble();

		// Call methods to print the coordinates of the center of the projectile
		System.out.println("The coordinates of where the projectile will explode are: ("
				+ projectile.trajectoryX(speed, angle, time) + ", " + projectile.trajectoryY(speed, angle, time) + ")");

	}

}
